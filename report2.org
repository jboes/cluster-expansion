#+BEGIN_SRC python
from ase.visualize import view
from glob import glob
from ase.io import read
from jasp import *
from amp import Amp
from ase.db import connect

with connect('cluster-expansion-gs.db') as db:
    GS = []
    with open('../archive/cluster-expansion-PBE/CuPd_fcc/gs.out') as f:
	for line in f.readlines():
	    GS += [line.split()[-1]]

    for gs in GS:
	try: 
	    with jasp('../archive/cluster-expansion-PBE/CuPd_fcc/{}'.format(gs)) as calc:
		atoms = calc.get_atoms()
                energy = atoms.get_potential_energy()
		db.write(atoms, nrg=energy, cfg=gs)
	except(VaspNotFinished):
	    pass
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python
ECu = -3.724347
EPd = -5.159093

print (-16.75754 - ECu*3 - EPd) / 4


ECu = -4.02159
EPd = -5.831758

print (-18.304613 - ECu*3 - EPd) / 4


#+END_SRC

#+RESULTS:
: -0.1063515
: -0.10202125

#+BEGIN_SRC python
from ase.db import connect
from glob import glob
from jasp import *
JASPRC['restart_unconverged'] = False

files = glob('../archive/cluster-expansion-PBE/CuPd_fcc/*/')

with connect('cluster-expansion.db') as db:
    for f in files:
        try:
            with jasp(f) as calc:
                atoms = calc.get_atoms()
                nrg = atoms.get_potential_energy()
                db.write(atoms)
        except(VaspNotFinished):
            pass

db = connect('cluster-expansion.db')

for d in db.select():
    print d.energy
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python
import numpy as np
from ase.db import connect
import matplotlib.pyplot as plt
from ase.visualize import view
from amp import Amp
from ase.lattice.cubic import FaceCenteredCubic as fcc
from scipy.optimize import curve_fit

fig, ax = plt.subplots()

# Select the lowest energy configuration
temps = [100, 800]
x = np.linspace(0, 1, 100)

ref = {}
for A, a in [['Cu', 3.634], ['Pd', 3.939]]:
    atoms = fcc(A,
                directions=[[0, 1, 1],
                            [1, 0, 1],
                            [1, 1, 0]],
    latticeconstant=a)

    atoms.set_calculator(Amp('networks/db5/40-7-7-1/trained-parameters.json'))
    ref[A] = atoms.get_potential_energy()

db = connect('cluster-expansion-gs.db')

print ref

for d in db.select():
    atoms = db.get_atoms(d.id)
    syms = d.symbols
    calc = Amp('networks/db5/40-7-7-1/')
    atoms.set_calculator(calc)
    Qe = (d.nrg - ref['Cu'] * syms.count('Cu') - ref['Pd'] * syms.count('Pd')) / d.natoms
    Ne = (atoms.get_potential_energy() - ref['Cu'] * syms.count('Cu') - ref['Pd'] * syms.count('Pd')) / d.natoms
    print d.cfg, Qe, Ne, Qe - Ne

atoms = db.get_atoms('id=4')
view(atoms)
#+END_SRC

#+RESULTS:
: {'Pd': -5.219217562327724, 'Cu': -3.728780805875772}
: 0 0.00443380587577 -9.0714974168e-06 0.00444287737319
: 73 -0.0577462347156 -0.0575845152341 -0.000161719481471
: 27 -0.0879950050112 -0.0735181283739 -0.0144768766373
: 184 -0.091626298502 -0.10306797305 0.011441674548
: 1 0.0601245623277 0.000525246522043 0.0595993158057

